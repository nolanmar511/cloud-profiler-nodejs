---
release_tags: &release_tags
  tags:
    only: /^v\d+(\.\d+){2}(-.*)?$/

# "Include" for unit tests definition.
unit_tests: &unit_tests
  steps:
    - checkout
    - run:
        name: Install modules and dependencies.
        command: npm install
    - run:
        name: Compiles typescript to javascript.
        command: npm run compile
    - run:
        name: Run unit tests.
        command: npm run test
    - run:
        name: Run C++ unit tests.
        command: npm run cpptest
    - run:
        name: Submit coverage data to codecov.
        command: npm run codecov
        when: always
  
gochecks: &gochecks
  steps:
   - checkout
   - run:
      name: Check that code is formatted.
      command: gofmtdiff=$(gofmt -s -d .) && if [ -n "$gofmtdiff" ]; then printf 'gofmt -s found:\n%s\n' "$gofmtdiff" && exit 1; fi
   - run:
      name: Install golint.
      command: go get -u github.com/golang/lint/golint
   - run:
      name: Run lint check.
      command: golintlint=$(golint ./...) && if [ -n "$golintlint" ]; then printf 'golint found:\n%s\n' "$golintlint" && exit 1; fi

version: 2.0
workflows:
  version: 2
  tests:
    jobs:
      - node6:
           filters: *release_tags
      - node8:
           filters: *release_tags
      - node9:
          filters: *release_tags
      - gocheck:
          filters: *release_tags
      - publish_npm:
          requires:
            - node6
            - node8
            - node9
            - gocheck
          filters:
            branches:
              ignore: /.*/
            <<: *release_tags

jobs:
  node6:
    docker:
      - image: node:6
        user: node
    <<: *unit_tests
  node8:
    docker:
      - image: node:8
        user: node
    <<: *unit_tests
  node9:
    docker:
      - image: node:9
        user: node
    <<: *unit_tests
  gocheck:
    docker:
      - image: circleci/golang:1.9
    <<: *gochecks
  publish_npm:
    docker:
      - image: node:8
        user: node
    steps:
      - checkout
      - run:
          name: Set NPM authentication.
          command: echo "//registry.npmjs.org/:_authToken=${NPM_TOKEN}" > ~/.npmrc
      - run:
          name: Install modules and dependencies.
          command: npm install
      - run:
          name: Publish the module to npm.
          command: npm publish
